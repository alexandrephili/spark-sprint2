{"version":3,"sources":["firebase/firebase.utils.js","components/header/header.component.jsx","components/form-input/form-input.component.jsx","components/custom-button/custom-button.component.jsx","components/sign-in/sign-in.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","provider","firestore","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","Header","_ref","currentUser","react_default","a","createElement","className","react_router_dom","to","onClick","signOut","FormInput","handleChange","label","otherProps","Object","objectWithoutProperties","assign","onChange","concat","value","length","CustomButton","children","isGoogleSignIn","SignIn","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","setState","email","password","_event$target","target","name","defineProperty","state","onSubmit","form_input_component","type","required","custom_button_component","React","Component","SignInAndSignUpPage","sign_in_component","TestComp","App","unsubscribeFromAuth","_this2","onAuthStateChanged","user","console","log","basename","header_component","react_router","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.07e2a9de.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAcrthorfxqWbZK7G9KmJ2yeVICB5-G2sE\",\r\n    authDomain: \"spark-diary.firebaseapp.com\",\r\n    databaseURL: \"https://spark-diary.firebaseio.com\",\r\n    projectId: \"spark-diary\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"345284954297\",\r\n    appId: \"1:345284954297:web:84abadcd3a4f0789\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\n//!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nprovider.setCustomParameters({ prompt: 'select_account'});\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { auth } from '../../firebase/firebase.utils';\r\n\r\n//import { ReactComponent as Logo } from '../../assets/crown.svg';\r\n\r\nimport './header.styles.scss';\r\n\r\nconst Header = ({ currentUser }) => (\r\n    <div className='header'>\r\n      <div className='options'>\r\n      <Link className='option' to='/capture'>\r\n          CAPTURE\r\n      </Link>\r\n      <Link className='option' to='/connect'>\r\n          CONNECT\r\n      </Link>\r\n      <Link className='option' to='/invent'>\r\n          INVENT\r\n      </Link>\r\n      <Link className='option' to='/tag-manager'>\r\n          TAG MANAGER\r\n      </Link>\r\n      {currentUser ? (\r\n          <div className='option' onClick={() => auth.signOut()}>\r\n             SIGN OUT\r\n          </div>\r\n      ) : (\r\n          <Link className='option' to='/signin'>\r\n              SIGN IN\r\n          </Link>\r\n      )}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n    <div className=\"group\">\r\n      <input className='form-input' onChange={handleChange} {...otherProps} />\r\n      {label ?\r\n          <label \r\n            className={`${\r\n              otherProps.value.length ? 'shrink' : ''\r\n            } form-input-label`}\r\n          >\r\n            {label}\r\n          </label>\r\n          : null\r\n      }\r\n    </div>\r\n)\r\n\r\nexport default FormInput;","import React from 'react';\r\n\r\nimport './custom-button.styles.scss';\r\n\r\nconst CustomButton = ({ children, isGoogleSignIn,...otherProps }) => (\r\n  <button className={`${isGoogleSignIn ? 'google-sign-in': ''} custom-button}`}\r\n  {...otherProps}\r\n  >\r\n    {children}\r\n  </button>\r\n)\r\n\r\nexport default CustomButton;","import React from 'react';\r\n\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nimport { signInWithGoogle } from '../../firebase/firebase.utils';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nclass SignIn extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({ email: '', password: ''})\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { value, name } = event.target;\r\n\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='sign-in'>\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n            <FormInput name='email' \r\n                   type='email' \r\n                   value={this.state.email} \r\n                   handleChange={this.handleChange}\r\n                   label='email'\r\n                   required />\r\n            <FormInput name='password'\r\n                   type='password' \r\n                   value={this.state.password}\r\n                   handleChange={this.handleChange}\r\n                   label='password'\r\n                   required \r\n            />\r\n            <div className='buttons'>\r\n                <CustomButton type='submit'> Sign in</CustomButton>\r\n                <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\r\n                    Sign in with Google\r\n                </CustomButton>\r\n            </div>\r\n          </form>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport './sign-in-and-sign-up.styles.scss';\r\n\r\nconst SignInAndSignUpPage = () => (\r\n  <div className='sign-in-and-sign-up'><SignIn /></div>\r\n);\r\n\r\nexport default SignInAndSignUpPage;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport { auth } from './firebase/firebase.utils';\r\n\r\nimport Header from './components/header/header.component.jsx';\r\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\r\n\r\nconst TestComp = props => {\r\n  return (\r\n    <div>\r\n      HOMEPAGE\r\n    </div>\r\n  );\r\n};\r\n\r\n/* function form\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path='/' component={TestComp} />\r\n        <Route path='/signin' component={SignInAndSignUpPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}*/\r\n\r\n/* class form\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route exact path='/' component={TestComp} />\r\n          <Route path='/signin' component={SignInAndSignUpPage} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n*/\r\n\r\n/*\r\n        <Route path='/signin' component={SignInAndSignUpPage} />\r\n*/\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      currentUser: null\r\n    }\r\n  }\r\n\r\n  unsubscribeFromAuth = null;\r\n\r\n  componentDidMount() {\r\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\r\n      this.setState({ currentUser: user})\r\n\r\n      console.log(user);\r\n    });\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribeFromAuth()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HashRouter basename='/'>\r\n        <Header currentUser={this.state.currentUser} />\r\n        <Switch>\r\n          <Route exact path='/' component={TestComp} />\r\n          <Route path='/signin' component={SignInAndSignUpPage} />\r\n        </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}